version: "3.7"
services:
  chat:
    build: ./services/chat
    ports:
      - "5000:3000"
    depends_on:
      - postgres
    environment:
      SERVICE_NAME: "chat"
      SERVICE_PORT: 3000
    volumes:
      - ./services/chat/src:/etc/chat/src
      - ./services/chat/views:/etc/chat/views
      - ./services/chat/ormconfig.json:/etc/chat/ormconfig.json
  auth:
    build: ./services/auth
    ports:
      - "5001:3000"
    depends_on:
      - postgres
    environment:
      SERVICE_NAME: "auth"
      SERVICE_PORT: 3000
    volumes:
      - ./services/auth/src:/etc/auth/src
      - ./services/auth/views:/etc/auth/views
      - ./services/auth/ormconfig.json:/etc/auth/ormconfig.json
  logging:
    build: ./services/logging
    ports:
      - "5002:3000"
    depends_on:
      - postgres
    environment:
      SERVICE_NAME: "logging"
      SERVICE_PORT: 3000
    volumes:
      - ./services/logging/src:/etc/logging/src
  redis:
    image: "redis:alpine"

  postgres:
    image: "postgres:9.6.1"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "test"
      POSTGRES_PASSWORD: "test"
      POSTGRES_DB: "test"
  rabbitmq:
    # There is a prebuilt RabbitMQ image; see
    # https://hub.docker.com/_/rabbitmq/ for details.
    # This variant is built on Alpine Linux (it's smaller) and includes
    # the management UI.
    image: "rabbitmq:3.6-management-alpine"

    # These ports are exposed on the host; 'hostport:containerport'.
    # You could connect to this server from outside with the *host's*
    # DNS name or IP address and port 5672 (the left-hand side of the
    # colon).
    # Credentials for the HTTP management UI
    # username: guest
    # password: guest
    ports:
      # The standard AMQP protocol port
      - "5672:5672"
      # HTTP management UI
      - "15672:15672"
